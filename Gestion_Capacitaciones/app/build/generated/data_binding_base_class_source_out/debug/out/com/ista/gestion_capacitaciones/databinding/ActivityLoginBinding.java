// Generated by view binder compiler. Do not edit!
package com.ista.gestion_capacitaciones.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.ista.gestion_capacitaciones.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnIngreso;

  @NonNull
  public final ImageButton btnRegreso;

  @NonNull
  public final TextInputEditText txtPassword;

  @NonNull
  public final TextInputEditText txtUsername;

  private ActivityLoginBinding(@NonNull LinearLayout rootView, @NonNull Button btnIngreso,
      @NonNull ImageButton btnRegreso, @NonNull TextInputEditText txtPassword,
      @NonNull TextInputEditText txtUsername) {
    this.rootView = rootView;
    this.btnIngreso = btnIngreso;
    this.btnRegreso = btnRegreso;
    this.txtPassword = txtPassword;
    this.txtUsername = txtUsername;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnIngreso;
      Button btnIngreso = ViewBindings.findChildViewById(rootView, id);
      if (btnIngreso == null) {
        break missingId;
      }

      id = R.id.btnRegreso;
      ImageButton btnRegreso = ViewBindings.findChildViewById(rootView, id);
      if (btnRegreso == null) {
        break missingId;
      }

      id = R.id.txtPassword;
      TextInputEditText txtPassword = ViewBindings.findChildViewById(rootView, id);
      if (txtPassword == null) {
        break missingId;
      }

      id = R.id.txtUsername;
      TextInputEditText txtUsername = ViewBindings.findChildViewById(rootView, id);
      if (txtUsername == null) {
        break missingId;
      }

      return new ActivityLoginBinding((LinearLayout) rootView, btnIngreso, btnRegreso, txtPassword,
          txtUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
